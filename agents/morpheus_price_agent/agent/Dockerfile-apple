FROM arm64v8/python:3.8-bullseye

# Set the working directory in the container
WORKDIR /app

# Copy the requirements file first for better caching
COPY requirements.txt .

# Install system dependencies
RUN apt-get update && apt-get install -y gcc g++ procps && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
RUN python3 -m pip install --no-cache-dir --upgrade pip && \
    python3 -m pip install --no-cache-dir --upgrade -r requirements.txt && \
    pip install --no-cache-dir -U llama-cpp-python huggingface-hub

# download ahead of source code copy so source code can be developed on without redownload of gguf file
RUN huggingface-cli download TheBloke/OpenHermes-2.5-Mistral-7B-GGUF openhermes-2.5-mistral-7b.Q4_K_M.gguf --local-dir model --local-dir-use-symlinks False

# Copy the application code and necessary files
COPY src/ ./src/

# Download the model (assuming download_model.py handles the download)
#RUN python3 src/download_model.py

# Expose the port your application listens on
EXPOSE 5000

# Set the environment variable for Flask
ENV FLASK_APP=src/agent.py

# Run the application
#CMD ["flask", "run", "--host", "0.0.0.0"]
CMD ["python3", "src/agent.py"]
